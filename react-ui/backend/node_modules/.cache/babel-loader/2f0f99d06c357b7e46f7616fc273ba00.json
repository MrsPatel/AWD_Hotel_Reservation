{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import DatePicker from'react-datepicker';import\"react-datepicker/dist/react-datepicker.css\";var EditBooking=/*#__PURE__*/function(_Component){_inherits(EditBooking,_Component);var _super=_createSuper(EditBooking);function EditBooking(props){var _this;_classCallCheck(this,EditBooking);_this=_super.call(this,props);/*\r\n        //Binding 'this' to each method so that \r\n        'this' refers to the right thing\r\n        */_this.onChangeRoom=_this.onChangeRoom.bind(_assertThisInitialized(_this));_this.onChangeFirstName=_this.onChangeFirstName.bind(_assertThisInitialized(_this));_this.onChangeLastName=_this.onChangeLastName.bind(_assertThisInitialized(_this));_this.onChangePhone=_this.onChangePhone.bind(_assertThisInitialized(_this));_this.onChangeEmail=_this.onChangeEmail.bind(_assertThisInitialized(_this));_this.onChangeCheckin=_this.onChangeCheckin.bind(_assertThisInitialized(_this));_this.onChangeCheckOut=_this.onChangeCheckout.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));/*\r\n        \r\n        Create everything in state so that wehen you update it gets \r\n        updated with the new values\r\n        Rooms is an array to select the rooms that are in the database\r\n        */_this.state={room:'',firstName:'',lastName:'',phone:'',email:'',checkIn:new Date(),checkOut:new Date(),rooms:[]};return _this;}/*\r\n    React lifecycle method\r\n    Component did mount will auto call right before anything displays\r\n    on page. \r\n    When the Create booking component is about to load, right before\r\n    it loads, it's going to run this\r\n    */_createClass(EditBooking,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('https://guarded-tundra-05442.herokuapp.com/booking/'+this.props.match.params.id).then(function(response){_this2.setState({room:response.data.room,firstName:response.data.firstName,lastName:response.data.lastName,phone:response.data.phone,email:response.data.email,checkIn:new Date(response.data.checkIn),checkOut:new Date(response.data.checkOut)});}).catch(function(error){console.log(error);});axios.get('https://guarded-tundra-05442.herokuapp.com/room/').then(function(response){if(response.data.length>0){_this2.setState({rooms:response.data.map(function(room){return room.room;}),room:response.data[0].room});}}).catch(function(error){console.log(error);});}//METHOD FOR WHEN ROOM SELECTION CHANGES\n//WHEN ROOM CHANFGES WE WILL SET THE STATE\n//use react setState method \n//Whenever room is changed it will set the state. \n//The targe is the textbox, value will be the value of that textbox\n//This is just fot the room element within the staee\n},{key:\"onChangeRoom\",value:function onChangeRoom(e){this.setState({room:e.target.value});}},{key:\"onChangeFirstName\",value:function onChangeFirstName(e){this.setState({firstName:e.target.value});}},{key:\"onChangeLastName\",value:function onChangeLastName(e){this.setState({lastName:e.target.value});}},{key:\"onChangePhone\",value:function onChangePhone(e){this.setState({phone:e.target.value});}},{key:\"onChangeEmail\",value:function onChangeEmail(e){this.setState({email:e.target.value});}/*\r\n    For these 2 we will add in a date to pass in and\r\n    get the value from the date \r\n    Calendar will be clickable \r\n    */},{key:\"onChangeCheckin\",value:function onChangeCheckin(date){this.setState({checkIn:date});}},{key:\"onChangeCheckout\",value:function onChangeCheckout(date){this.setState({checkOut:date});}},{key:\"onSubmit\",value:function onSubmit(e){//prevents default HTML submit behavior from taking place\ne.preventDefault();var booking={room:this.state.room,firstName:this.state.firstName,lastName:this.state.lastName,phone:this.state.phone,email:this.state.email,checkIn:this.state.checkIn,checkOut:this.state.checkOut};console.log(booking);axios.post('https://guarded-tundra-05442.herokuapp.com/booking/update/'+this.props.match.params.id,booking).then(function(res){return console.log(res.data);});//send user data to backend \n//Take the person back to the home page\n//We need to change to take to the payments page\nwindow.location='/';}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Update My Booking\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Room: \"),/*#__PURE__*/React.createElement(\"select\",{ref:\"roomInput\",required:true,className:\"form-control\",value:this.state.room,onChange:this.onChangeRoom},this.state.rooms.map(function(room){return/*#__PURE__*/React.createElement(\"option\",{key:room,value:room},room);}))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"First Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",required:true,className:\"form-control\",value:this.state.firstName,onChange:this.onChangeFirstName})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Last Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",required:true,className:\"form-control\",value:this.state.lastName,onChange:this.onChangeLastName})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Phone: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",required:true,className:\"form-control\",value:this.state.phone,onChange:this.onChangePhone})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Email: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",required:true,className:\"form-control\",value:this.state.email,onChange:this.onChangeEmail})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Check In Date: \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.checkIn,onChange:this.onChangeCheckin}))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Check Out Date: \"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.checkOut,onChange:this.onChangeCheckOut}))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Edit Booking\",className:\"btn btn-primary\"}))));}}]);return EditBooking;}(Component);/*\r\nthis.onChangeCheckin = this.onChangeCheckin.bind(this);\r\nthis.onChangeCheckOut = this.onChangeCheckout.bind(this);\r\nthis.onSubmit = this.onSubmit.bind(this);\r\n\r\n*/export{EditBooking as default};","map":{"version":3,"sources":["C:/Users/benso/Documents/COSC617/Project/src/components/edit-booking.component.js"],"names":["React","Component","axios","DatePicker","EditBooking","props","onChangeRoom","bind","onChangeFirstName","onChangeLastName","onChangePhone","onChangeEmail","onChangeCheckin","onChangeCheckOut","onChangeCheckout","onSubmit","state","room","firstName","lastName","phone","email","checkIn","Date","checkOut","rooms","get","match","params","id","then","response","setState","data","catch","error","console","log","length","map","e","target","value","date","preventDefault","booking","post","res","window","location"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport default class EditBooking extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        /*\r\n        //Binding 'this' to each method so that \r\n        'this' refers to the right thing\r\n        */\r\n        this.onChangeRoom = this.onChangeRoom.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangePhone = this.onChangePhone.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeCheckin = this.onChangeCheckin.bind(this);\r\n        this.onChangeCheckOut = this.onChangeCheckout.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        \r\n        /*\r\n        \r\n        Create everything in state so that wehen you update it gets \r\n        updated with the new values\r\n        Rooms is an array to select the rooms that are in the database\r\n        */\r\n        this.state = {\r\n            room: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n            email: '',\r\n            checkIn: new Date(),\r\n            checkOut: new Date(),\r\n            rooms: []\r\n        }\r\n    }\r\n\r\n    /*\r\n    React lifecycle method\r\n    Component did mount will auto call right before anything displays\r\n    on page. \r\n    When the Create booking component is about to load, right before\r\n    it loads, it's going to run this\r\n    */\r\n    componentDidMount(){\r\n        axios.get('https://guarded-tundra-05442.herokuapp.com/booking/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    room: response.data.room, \r\n                    firstName: response.data.firstName,\r\n                    lastName: response.data.lastName,\r\n                    phone: response.data.phone,\r\n                    email: response.data.email,\r\n                    checkIn: new Date(response.data.checkIn),\r\n                    checkOut: new Date(response.data.checkOut)\r\n                })\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n        axios.get('https://guarded-tundra-05442.herokuapp.com/room/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState({\r\n                        rooms: response.data.map(room => room.room),\r\n                        room: response.data[0].room\r\n                    })\r\n                }\r\n            })\r\n            .catch ((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    //METHOD FOR WHEN ROOM SELECTION CHANGES\r\n    //WHEN ROOM CHANFGES WE WILL SET THE STATE\r\n    //use react setState method \r\n    //Whenever room is changed it will set the state. \r\n    //The targe is the textbox, value will be the value of that textbox\r\n    //This is just fot the room element within the staee\r\n    onChangeRoom(e){\r\n        this.setState({\r\n            room: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeFirstName(e){\r\n        this.setState({\r\n            firstName: e.target.value\r\n        })\r\n    }\r\n    onChangeLastName(e){\r\n        this.setState({\r\n            lastName: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePhone(e){\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeEmail(e){\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    /*\r\n    For these 2 we will add in a date to pass in and\r\n    get the value from the date \r\n    Calendar will be clickable \r\n    */\r\n    onChangeCheckin(date){\r\n        this.setState({\r\n            checkIn: date\r\n        })\r\n    }\r\n\r\n    onChangeCheckout(date){\r\n        this.setState({\r\n            checkOut: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        //prevents default HTML submit behavior from taking place\r\n        e.preventDefault();\r\n\r\n        const booking = {\r\n            room: this.state.room,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            phone: this.state.phone,\r\n            email: this.state.email,\r\n            checkIn: this.state.checkIn,\r\n            checkOut: this.state.checkOut\r\n        }\r\n\r\n        console.log(booking);\r\n        axios.post('https://guarded-tundra-05442.herokuapp.com/booking/update/'+this.props.match.params.id, booking)\r\n            .then (res => console.log(res.data));\r\n        //send user data to backend \r\n        \r\n\r\n        //Take the person back to the home page\r\n        //We need to change to take to the payments page\r\n        window.location = '/';\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>Update My Booking</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className = \"form-group\">\r\n                        <label>Room: </label>\r\n                        <select ref=\"roomInput\"\r\n                            required\r\n                            className = \"form-control\"\r\n                            value = {this.state.room}\r\n                            onChange={this.onChangeRoom}>\r\n                            {\r\n                                this.state.rooms.map(function(room){\r\n                                    return <option\r\n                                        key={room}\r\n                                        value={room}>{room}\r\n                                        </option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\"> \r\n                        <label>First Name: </label>\r\n                        <input  type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChangeFirstName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChangeLastName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Phone: </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.phone}\r\n                            onChange={this.onChangePhone}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input \r\n                            type=\"email\" \r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Check In Date: </label>\r\n                        <div>\r\n                            <DatePicker\r\n                                selected = {this.state.checkIn}\r\n                                onChange = {this.onChangeCheckin}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Check Out Date: </label>\r\n                        <div>\r\n                            <DatePicker\r\n                                selected = {this.state.checkOut}\r\n                                onChange = {this.onChangeCheckOut}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Booking\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nthis.onChangeCheckin = this.onChangeCheckin.bind(this);\r\nthis.onChangeCheckOut = this.onChangeCheckout.bind(this);\r\nthis.onSubmit = this.onSubmit.bind(this);\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}