{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\benso\\\\Documents\\\\COSC617\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Link}from'react-router-dom';import axios from'axios';/*\r\nLink below is from react router dom \r\n*/var Booking=function Booking(props){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,props.booking.room),/*#__PURE__*/React.createElement(\"td\",null,props.booking.firstName),/*#__PURE__*/React.createElement(\"td\",null,props.booking.lastName),/*#__PURE__*/React.createElement(\"td\",null,props.booking.phone),/*#__PURE__*/React.createElement(\"td\",null,props.booking.email),/*#__PURE__*/React.createElement(\"td\",null,props.booking.checkIn.substring(0,10)),/*#__PURE__*/React.createElement(\"td\",null,props.booking.checkOut.substring(0,10)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/editBooking/\"+props.booking._id},\"Edit\"),\" | \",/*#__PURE__*/React.createElement(\"a\",{href:\"/\",onClick:function onClick(){props.deleteBooking(props.booking._id);}},\"Cancel\")));};var BookingsList=/*#__PURE__*/function(_Component){_inherits(BookingsList,_Component);var _super=_createSuper(BookingsList);function BookingsList(props){var _this;_classCallCheck(this,BookingsList);_this=_super.call(this,props);_this.deleteBooking=_this.deleteBooking.bind(_assertThisInitialized(_this));_this.state={bookings:[]};return _this;}//This will get all the bookings from here \n_createClass(BookingsList,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('https://guarded-tundra-05442.herokuapp.com/booking/').then(function(response){_this2.setState({bookings:response.data});}).catch(function(error){console.log(error);});}},{key:\"deleteBooking\",value:function deleteBooking(id){axios.delete('https://guarded-tundra-05442.herokuapp.com/booking/'+id)//log that it's been deleted\n.then(function(response){console.log(response.data);});//Statee filters to show the one that isn't your booking     \n//The below code updates the page with the new table after the entry is deleted        \n/*\r\n     When the id does not equal the omne we're deleting, we'll pass it to theexercises array. Remove just what we are deleting.  \r\n     the _id comes from the mongoDb\r\n    */this.setState({bookings:this.state.bookings.filter(function(el){return el._id!==id;})});}},{key:\"boookingList\",value:function boookingList(){var _this3=this;return this.state.bookings.map(function(currentbooking){return/*#__PURE__*/React.createElement(Booking,{booking:currentbooking,deleteBooking:_this3.deleteBooking,key:currentbooking._id});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Current Bookings\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-light\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Room\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Phone\"),/*#__PURE__*/React.createElement(\"th\",null,\"E-Mail\"),/*#__PURE__*/React.createElement(\"th\",null,\"Check In\"),/*#__PURE__*/React.createElement(\"th\",null,\"Check Out\"),/*#__PURE__*/React.createElement(\"th\",null,\"Actions\"))),/*#__PURE__*/React.createElement(\"tbody\",null,this.boookingList())));}}]);return BookingsList;}(Component);export{BookingsList as default};","map":{"version":3,"sources":["C:/Users/benso/Documents/COSC617/Project/src/components/bookings-list.component.js"],"names":["React","Component","Link","axios","Booking","props","booking","room","firstName","lastName","phone","email","checkIn","substring","checkOut","_id","deleteBooking","BookingsList","bind","state","bookings","get","then","response","setState","data","catch","error","console","log","id","delete","filter","el","map","currentbooking","boookingList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n/*\r\nLink below is from react router dom \r\n*/\r\nconst Booking = props => (\r\n    <tr>\r\n        <td>{props.booking.room}</td>\r\n        <td>{props.booking.firstName}</td>\r\n        <td>{props.booking.lastName}</td>\r\n        <td>{props.booking.phone}</td>\r\n        <td>{props.booking.email}</td>\r\n        <td>{props.booking.checkIn.substring(0,10)}</td>\r\n        <td>{props.booking.checkOut.substring(0,10)}</td>\r\n        <td>\r\n        <Link to={\"/editBooking/\"+props.booking._id}>Edit</Link> | <a href=\"/\" onClick={() => { props.deleteBooking(props.booking._id) }}>Cancel</a>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\n\r\nexport default class BookingsList extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.deleteBooking = this.deleteBooking.bind(this);\r\n\r\n        this.state = {bookings: []};\r\n    }\r\n\r\n    //This will get all the bookings from here \r\n    componentDidMount(){\r\n        axios.get('https://guarded-tundra-05442.herokuapp.com/booking/')\r\n            .then(response => {\r\n                this.setState({bookings: response.data})\r\n            })\r\n            .catch((error)=> {\r\n                console.log(error);\r\n            })\r\n    }\r\n    \r\n    deleteBooking(id){\r\n        axios.delete('https://guarded-tundra-05442.herokuapp.com/booking/'+id)\r\n            //log that it's been deleted\r\n            .then(response => {console.log(response.data)});\r\n\r\n        //Statee filters to show the one that isn't your booking     \r\n\r\n    //The below code updates the page with the new table after the entry is deleted        \r\n    /*\r\n     When the id does not equal the omne we're deleting, we'll pass it to theexercises array. Remove just what we are deleting.  \r\n     the _id comes from the mongoDb\r\n    */\r\n        this.setState({\r\n            bookings: this.state.bookings.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    boookingList(){\r\n        return this.state.bookings.map(currentbooking =>{\r\n            return <Booking booking = {\r\n                currentbooking\r\n            }\r\n            deleteBooking = {\r\n                this.deleteBooking\r\n            }\r\n            key = {\r\n                currentbooking._id\r\n            }\r\n            />;\r\n        })\r\n    }\r\n  render(){\r\n      return (\r\n        <div>\r\n        <h3>Current Bookings</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Room</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Phone</th>\r\n              <th>E-Mail</th>\r\n              <th>Check In</th>\r\n              <th>Check Out</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.boookingList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}